interface Generator (
	def next = _
	def toString _
)

class Iterate implements Generator (
	def init(func, seed) = (
		this.func = func
		this.seed = seed
		this.first = True
	)

	def next = (
		if first (this.first = False; return seed)
		this.seed = func seed
		return seed
	)

	def toString = "[" ++ show this.seed ++ ".." ++ show func ++ " n" ++ "]"
)

class Cycle implements Generator (
	def Cycle(xs) = (
		this.list = xs
		this.curr = xs
	)
	
	def next = (
		item = head curr
		this.curr = tail curr
		if (curr == []) (
			this.curr = this.list
		)
		return item
	)
	
	def toString = "[" ++ head this.list ++ ".." ++ head this.list ++ "]" 
)
